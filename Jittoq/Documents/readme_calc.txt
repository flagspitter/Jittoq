簡易電卓

【とりあえずの使い方】
・Ctrl + Alt + Enter を押すと、ウィンドウが表示されます
・数式を入力して Enter を押すと、結果が表示されます

【概要】

★キーボードから手を放したくない人へ

・世の電卓は、なぜかマウス用のボタンがごてごてついてて邪魔！どうせ使わないのに…
・Windows標準電卓は起動も遅いし、プログラマ電卓と小数が両立せず面倒、その上バージョンアップでショートカットキー変更の改悪もある
…なんて思ってる人向けです。
プログラマをAlt+4に移して、Alt+3をグラフに割り当てた奴は絶許

・タスクトレイに常駐し、ショートカットキーで素早く起動できます
・キーボードオペレーションを前提とするので、余計なボタンを表示せず、省スペース
・設定等のGUIも持たず、iniファイルで直接編集のみです

★必要最低限の機能のみ

・フリーフォーマットで数式を入力し、Enterで結果表示するだけです
・変数をサポートします
・履歴機能をサポートします
・関数は一部( sin, cos, tan, sqrt, exp, log, ln, abs, inv, int )のみサポートします
※inv は逆数、 int は小数点以下の切り捨てを示します
・各関数は、:inv のようにコロンを付け、値の後に記述することでも可能
・各関数は、;inv のようにセミコロンを付け、式全体の後に記述することでも可能（最低優先度）
・SI接頭辞をサポートします (ロナ(R)、クエタ(Q)までサポートしているが使い道は無いだろう）
・二進接頭辞をサポートします( Eiまで。ロビ？(Ri), クビ？クエビ？(Qi) はまだないらしい)
・数式上、0x 付加で16進数をサポートします
・計算結果は(整数部を)16進数に変換した値も併記します
・pi は定数で円周率

【優先度】
(高)
・括弧
・順列(nPr) 組み合わせ(nCr)
・ビット反転(~) 負数(-)
・後置関数… :sin :cos :tan :sqrt :exp :log :ln :abs :inv :int
・前置関数… sin cos tan sqrt exp log ln abs inv int
・累乗(^) 階乗(!)
・乗算(*) 除算(/) 剰余(%)
・加算(+) 減算(-)
・左シフト(<<) 右シフト(>>)
・論理積( & または and )
・排他的論理和( ` または xor )
・論理和( | または or )
・後置関数(セミコロンで低優先度版)… ;sin ;cos ;tan ;sqrt ;exp ;log ;ln ;abs ;inv ;int
・代入(=)
(低)

【操作】

(基本操作)
・ショートカットキー(デフォルトでは Ctrl+Alt+Enter)で表示します
・数式を入力し、Enterで結果を表示します
・数式中のスペースは無視します
・Escで入力中の数式を消去します。もう一度Escで結果表示を消去します。

(演算子)
・加減乗除 + - * /
・剰余 %  論理積 &  論理和 |  排他的論理和 `  ビット反転 ~  左シフト <<  右シフト >>
・累乗(べき乗) ^ **

※排他的論理和(XOR)とべき乗をどうするかは悩ましい問題。
　XORはひとまず ` に割り当て。C言語では ^ だけど、これはXORより使用頻度が高いべき乗に使いたいので。
　気に入らない人は.lexをてきとーに改造して。

(16進数)
・0x100 のように、0xの付加で数値を16進数として使うことができます。この場合、256 を得られます。
・16進数欄は、小数点を切り捨てた値を元にします。
・ビット演算は、小数点を切り捨てた値で計算します。

(クリップボード)
・数式入力欄は、通常の Ctrl+C や Ctrl+Vでのコピペ操作が可能です。
・Alt+C で、結果をクリップボードにコピーします
・Shift+Alt+C で、結果を16進数の結果をクリップボードにコピーします

(変数)
・# で始まり、英数字と _ で構成する文字列は変数として扱います。
・#foo = (1+2)*3 のように入力すると、#foo は 9 になります
　次に #foo * 2 のように入力すると、18 が表示されます
　代入は式の最初でのみ使用可能です。これは意図的な仕様です。
・#ans は特殊な変数です。この変数は、常に前回の計算結果を示します

(関数)
・cos 0 のように、関数名に続いて数値を入力すると、その関数を計算できます
　※三角関数はラジアンのみです
・2:inv のように 数値:関数名 の形式で入力しても可
・42/5;int のように 式;関数名 の形式で入力すると、式全体に関数がかかります

(指数)
・12k のように、SI接頭辞を記述することができます。この場合、12000 を得られます。マイクロはuです。
・1Mi のように、二進接頭辞を記述することができます。この場合、1048576 を得られます。みんな二進接頭辞使おう
・SI接頭辞、二進接頭辞に関してのみ、大文字と小文字を区別します。M(メガ) m(ミリ)だしね。
・キロは小文字の k が正解ですが、間違える人も多いので大文字の K でもOKにしています。
・1E+3 のように、指数を記述することができます。この場合、1000 を得られます。

【特殊な操作】
・Alt+A で、#ans を数式に挿入します

・上下キーで数式の履歴を表示します
　計算結果の表示は変化しません

・Ctrl+上下で、数式の履歴を表示しつつ、計算結果も表示します
　この機能では再計算を行います。つまり、
　- #ans を更新するし、代入式の場合の変数も更新します
　- 式に変数を含む場合、履歴表示した時点での値を参照します

・Ctrl+Shift+Alt+V で、バージョンを結果欄に表示します

【設定】
実行ファイルと同じ位置の Settings.ini で、[Calc] を参照します。
詳細は、iniファイルのコメントを参照してください。

【FAQ】
Ｑ：複素数は？
Ａ：残念ながら未対応。俺が使わないから。

Ｑ：でも .lex に Imaginary [IiJj][0-9]+ の記述が
Ａ：面倒になったんだよ…

Ｑ：キロを大文字OKにすると間違って覚える人もいるんでは？
Ａ：一理あるが、まあいいかなって

Ｑ：大文字Kは1024倍の意味じゃなかった？
Ａ：そんな規格は存在しない。Ki を使おう

Ｑ：sin pi が 1.22460635382238E-16 になるんだけど
Ａ：誤差だよ誤差

Ｑ：８進数…
Ａ：いる？
